e_direct_dk = ifelse(e_direct == "不想回答", 1, 0), #in main analysis
c_direct = ifelse(c_direct == "同意", 1, 0),
d_direct = ifelse(d_direct == "同意", 1, 0),
e_direct = ifelse(e_direct == "同意", 1, 0),
placebo_direct = ifelse(placebo_1_direct == "同意" | placebo_2_direct == "同意", 1, 0),
time_spent = time_length(interval(as_datetime(StartDate), as_datetime(EndDate))) #in seconds!
)  %>%
select(-c(IMC_1_1:IMC_1_6, info, imc_2_3:imc_2_7, placebo_1_direct:placebo_2_direct,
StartDate, EndDate))
#lets remove"项" from the treatment, control and placebo groups
keep_digit <- function(x) gsub("[^0-9]", "", x)
vars <- c("a_control", "a_treatment", "b_control", "b_placebo", "b_treatment",
"c_control", "c_treatment", "d_control","d_treatment",
"e_control", "e_placebo", "e_treatment")
df <-  df %>% mutate_at(vars, keep_digit)
df %>% select(imc_1, imc_2_1, imc_2_2, imc_2_2_inc_somewhat) %>%
gather() %>%
group_by(key, value) %>%
summarise(N=n())
23/86
#how many are attentive in our sample?
df %>% group_by(attentive_imc) %>% summarise(N=n())
df %>% select(fmc_a:fmc_e) %>%
gather() %>%
group_by(key, value) %>%
summarise(N=n())
#How much time do respondents spend on the survey? in minutes
df %>%
ggplot(aes(x=time_spent/60)) +
geom_density()
df %>%
ggplot(aes(x=time_spent/60, fill = as.factor(imc_2_2_inc_somewhat))) +
geom_density(alpha= .5) +
scale_fill_viridis_d()
# whats the correlation structure between all our attentiveness meassures?
df %>%
select(imc_1, imc_2_1, imc_2_2_inc_somewhat, imc_2_2, fmc_a:fmc_e) %>%
cor() %>%
corrplot::corrplot(.,
tl.col = "black",
tl.cex = 0.75,
col = viridis::viridis(10))
length(unique(df$IPAddress, na.rm=TRUE))
###
# Where are ppl at?
###
map <- df %>%
st_as_sf(coords = c("lng", "lat"))
st_crs(map) <- st_crs(4326) #sets projection
mapview::mapview(map)
df %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram() +
facet_wrap(~key)
df %>%
filter(imc_2_1 == 1) %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram() +
facet_wrap(~key)
df %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram() +
facet_wrap(~key)
df %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram(stat="count") +
facet_wrap(~key)
df %>%
filter(imc_2_1 == 1) %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram(stat="count") +
facet_wrap(~key)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(A_dim = a_treatment - a_control,
B_dim = b_treatment - b_control,
B_dim_placebo = b_treatment - b_placebo) %>%
select(A_dim:B_dim_placebo) %>%
gather() %>%
mutate(sample = rep("all", length(.[,1]))) %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
geom_vline(aes(xintercept=.25), linetype= 2) +
geom_vline(aes(xintercept= .166), linetype= 3) +
scale_color_viridis_d()
# Do we get the expected direction for C, D and E?
df %>% select(a_control:e_treatment, c_direct, d_direct, e_direct) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(c_dim = c_treatment - c_control,
d_dim = d_treatment - d_control,
e_dim = e_treatment - c_control,
e_dim = e_treatment - c_control,
e_dim_placebo = e_treatment - e_placebo,
#c_est = c_direct - c_dim,
#d_est = d_direct - d_dim,
#e_est = e_direct - e_dim,
#e_est_placebo = e_direct - e_dim_placebo
)%>%
select(c_dim:e_dim_placebo, c_direct, d_direct, e_direct) %>%
gather() %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
scale_color_viridis_d()
View(df)
library(qualtRics)
library(tidyverse)
library(lubridate)
#browse all surveys
surveys <- all_surveys()
surveys
#we want data from the 5th one in the list (at least among my list of surveys)
df <- fetch_survey(surveys$id[5], convert = FALSE, force_request = TRUE)
names(df)
df <- df[456:541,]
#lets clean and mutate the variables
df <- df %>%
select(ResponseID:EndDate, Finished, age:audit, a_control, a_treatment,
b_control, b_placebo, b_treatment, c_control, c_treatment, d_control,
d_treatment, e_control, e_placebo, e_treatment, fmc_a, fmc_b, fmc_e,
placebo_1_direct:sponsor,
lat = LocationLatitude, lng = LocationLongitude, LocationAccuracy) %>%
mutate(imc_1 = ifelse(IMC_1_4 == "红色" & IMC_1_6 == "绿色", 1, 0),
imc_1 = ifelse(is.na(imc_1), 0, imc_1),
imc_2_1 = ifelse(imc_2_1 == "说不上同意或反对", 1, 0),
imc_2_2_inc_somewhat = ifelse(imc_2_2 == "强烈不同意" | imc_2_2 == "某种程度上不同意", 1, 0),
imc_2_2 = ifelse(imc_2_2 == "强烈不同意", 1, 0),
attentive_imc = ifelse(imc_1 == 1 & imc_2_1 == 1 & imc_2_2 == 1,
1, 0),
audit = ifelse(is.na(audit), "control", "received"),
fmc_a = ifelse(fmc_a == "在我们国家，空气污染是一个重要的问题。", 1, 0),
fmc_b = ifelse(fmc_b == "政府就像是家长，应该告诉人民应该做什么。", 1, 0),
fmc_e = ifelse(fmc_e == "政府为所有人提供优质的公共服务。", 1, 0),
c_direct_dk = ifelse(c_direct == "不想回答", 1, 0), #for priming checks
d_direct_dk = ifelse(d_direct == "不想回答", 1, 0), #and filter drop DK
e_direct_dk = ifelse(e_direct == "不想回答", 1, 0), #in main analysis
c_direct = ifelse(c_direct == "同意", 1, 0),
d_direct = ifelse(d_direct == "同意", 1, 0),
e_direct = ifelse(e_direct == "同意", 1, 0),
placebo_direct = ifelse(placebo_1_direct == "同意" | placebo_2_direct == "同意", 1, 0),
time_spent = time_length(interval(as_datetime(StartDate), as_datetime(EndDate))) #in seconds!
)  %>%
select(-c(IMC_1_1:IMC_1_6, info, imc_2_3:imc_2_7, placebo_1_direct:placebo_2_direct,
StartDate, EndDate))
#lets remove"项" from the treatment, control and placebo groups
keep_digit <- function(x) gsub("[^0-9]", "", x)
vars <- c("a_control", "a_treatment", "b_control", "b_placebo", "b_treatment",
"c_control", "c_treatment", "d_control","d_treatment",
"e_control", "e_placebo", "e_treatment")
df <-  df %>% mutate_at(vars, keep_digit)
df %>%
select(a_control:e_treatment) %>%
gather() %>%
ggplot(aes(x=value)) +
geom_histogram(stat="count") +
facet_wrap(~key)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(A_dim = a_treatment - a_control,
B_dim = b_treatment - b_control,
B_dim_placebo = b_treatment - b_placebo) %>%
select(A_dim:B_dim_placebo) %>%
gather() %>%
mutate(sample = rep("all", length(.[,1]))) %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
geom_vline(aes(xintercept=.25), linetype= 2) +
geom_vline(aes(xintercept= .166), linetype= 3) +
scale_color_viridis_d()
f %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE)
library(tidyverse)
library(ggplot2); theme_set(theme_classic())
library(rio)
library(mapview)
library(sf)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE)
df <-  df %>% mutate_at(vars, keep_digit)
vars <- c("a_control", "a_treatment", "b_control", "b_placebo", "b_treatment",
"c_control", "c_treatment", "d_control","d_treatment",
"e_control", "e_placebo", "e_treatment")
df <-  df %>% mutate_at(vars, keep_digit)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE)
View(df)
mean(df$a_treatment, na.rm=TRUE)
mean(is.numeric(df$a_treatment), na.rm=TRUE)
class(df$a_treatment)
df <-  df %>% mutate_at(vars, keep_digit) %>%
mutate_at(vars, as.numric)
df <-  df %>% mutate_at(vars, keep_digit) %>%
mutate_at(vars, as.numric())
df <-  df %>% mutate_at(vars, keep_digit) %>%
mutate_at(vars, as.numeric)
df %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(A_dim = a_treatment - a_control,
B_dim = b_treatment - b_control,
B_dim_placebo = b_treatment - b_placebo) %>%
select(A_dim:B_dim_placebo) %>%
gather() %>%
mutate(sample = rep("all", length(.[,1]))) %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
geom_vline(aes(xintercept=.25), linetype= 2) +
geom_vline(aes(xintercept= .166), linetype= 3) +
scale_color_viridis_d()
# and are we better at it dropping inattentives?
df %>%
filter(imc_2_1 == 1) %>%
select(a_control:b_treatment) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(A_dim = a_treatment - a_control,
B_dim = b_treatment - b_control,
B_dim_placebo = b_treatment - b_placebo) %>%
select(A_dim:B_dim_placebo) %>%
gather() %>%
mutate(sample = rep("only attentives", length(.[,1]))) %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
geom_vline(aes(xintercept=.25), linetype= 2) +
geom_vline(aes(xintercept= .166), linetype= 3) +
scale_color_viridis_d()
# Do we get the expected direction for C, D and E?
df %>% select(a_control:e_treatment, c_direct, d_direct, e_direct) %>%
summarise_all(mean, na.rm=TRUE) %>%
mutate(c_dim = c_treatment - c_control,
d_dim = d_treatment - d_control,
e_dim = e_treatment - c_control,
e_dim = e_treatment - c_control,
e_dim_placebo = e_treatment - e_placebo,
#c_est = c_direct - c_dim,
#d_est = d_direct - d_dim,
#e_est = e_direct - e_dim,
#e_est_placebo = e_direct - e_dim_placebo
)%>%
select(c_dim:e_dim_placebo, c_direct, d_direct, e_direct) %>%
gather() %>%
ggplot(aes(x=value, y=key, color = key)) +
geom_point() +
scale_color_viridis_d()
a <- glm(fmc_a ~ audit, data = df) %>%  broom::tidy()
b <- glm(fmc_b ~ audit, data = df) %>%  broom::tidy()
c <- glm(fmc_e ~ audit, data = df) %>%  broom::tidy()
#install.pckages(dotwhisker)
rbind(a,b,c) %>%
filter(term!="(Intercept)") %>%
mutate(model = c("a", "b", "c")) %>%
dotwhisker::dwplot(vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2),
dot_args = list(aes(color = model), size = 3),
whisker_args = list(aes(color = model)), dodge_size = .7) +
labs(title = "Estimated effect of audit message \non passing fmc")
#how about audit on time?
lm(time_spent ~ audit, data = df) %>%
broom::tidy() %>%
filter(term!="(Intercept)") %>%
dotwhisker::dwplot(vline = geom_vline(xintercept = 0, colour = "grey60", linetype = 2),
dot_args = list(size = 3),
whisker_args = list(), dodge_size = .7) +
labs(title = "Estimated effect of audit message \non time spent")
#prmse for audit/non audit
df_audit <- df %>% filter(audit == "received")
df_no_audit <- df %>% filter(audit == "control")
prmse_a_audit <-  prmse(estimand = .25, df_audit$a_treatment, df_audit$a_control)
prmse_a_no_audit <-  prmse(estimand = .25, df_no_audit$a_treatment, df_no_audit$a_control)
prmse_a_audit < prmse_a_no_audit #actually that says very little lets just look at the values for now.
#lets write our function
prmse <- function(estimand, treatment, control) {
sqrt(
(var(treatment, na.rm=TRUE) + var(control, na.rm=TRUE))
+ (estimand - ((mean(treatment, na.rm=TRUE) - mean(control, na.rm=TRUE))^2))
)
}
#prmse for audit/non audit
df_audit <- df %>% filter(audit == "received")
df_no_audit <- df %>% filter(audit == "control")
prmse_a_audit <-  prmse(estimand = .25, df_audit$a_treatment, df_audit$a_control)
prmse_a_no_audit <-  prmse(estimand = .25, df_no_audit$a_treatment, df_no_audit$a_control)
prmse_a_audit < prmse_a_no_audit #actually that says very little lets just look at the values for now.
# lets get the survey questions
questions <- survey_questions(surveys$id[5])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qnames)) %>%
select(Tag, Wording)
questions
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording)
View(questions)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
.2*.2
(1/5)/(1/5)
(1/5)*(1/5)
2^2
3^3
6^6
install.packages(c('rmarkdown','rticles'))
install.packages(c("rmarkdown", "rticles"))
library(qualtRics)
library(tidyverse)
library(lubridate)
#browse all surveys
surveys <- all_surveys()
surveys
#we want data from the 5th one in the list (at least among my list of surveys)
df <- fetch_survey(surveys$id[4], convert = FALSE, force_request = TRUE)
# lets get the survey questions
questions <- survey_questions(surveys$id[4])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording)
View(questions)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
View(surveys)
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
View(questions)
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording) %>%
distinct(Tag, .keep_all = FALSE)
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording) %>%
distinct(Tag, .keep_all = FALSE)
View(questions)
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording) %>%
distinct(Tag, .keep_all = TRUE)
View(questions)
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording) %>%
distinct(Tag, .keep_all = TRUE)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
library(dplyr)
library(knitr)
library(kableExtra)
rio::import("data/question_wording.csv") %>%
kable("latex", booktabs = TRUE, longtable = TRUE, caption = "") %>%
kable_styling(full_width = TRUE, latex_options = c("hold_position")) %>%
column_spec(1, bold = T, border_right = T, width = "10em") %>%
column_spec(2, width = "35em")
rio::import("data/question_wording.csv") %>%
kable("latex", booktabs = TRUE, longtable = TRUE, caption = "") %>%
kable_styling(full_width = TRUE, latex_options = c("hold_position")) %>%
column_spec(1, bold = T, border_right = T, width = "10em") %>%
column_spec(2, width = "35em")
library(qualtRics)
library(tidyverse)
library(lubridate)
#browse all surveys
surveys <- all_surveys()
surveys
#we want data from the 5th one in the list (at least among my list of surveys)
df <- fetch_survey(surveys$id[4], convert = FALSE, force_request = TRUE)
names(df)
df <- df[341:541,]
#lets clean and mutate the variables
df <- df %>%
select(ResponseID:EndDate, Finished, age:audit, a_control, a_treatment,
b_control, b_placebo, b_treatment, c_control, c_treatment, d_control,
d_treatment, e_control, e_placebo, e_treatment, fmc_a, fmc_b, fmc_e,
placebo_1_direct:sponsor,
lat = LocationLatitude, lng = LocationLongitude, LocationAccuracy) %>%
mutate(imc_1 = ifelse(IMC_1_4 == "红色" & IMC_1_6 == "绿色", 1, 0),
imc_1 = ifelse(is.na(imc_1), 0, imc_1),
imc_2_1 = ifelse(imc_2_1 == "说不上同意或反对", 1, 0),
imc_2_2_inc_somewhat = ifelse(imc_2_2 == "强烈不同意" | imc_2_2 == "某种程度上不同意", 1, 0),
imc_2_2 = ifelse(imc_2_2 == "强烈不同意", 1, 0),
attentive_imc = ifelse(imc_1 == 1 & imc_2_1 == 1 & imc_2_2 == 1,
1, 0),
audit = ifelse(is.na(audit), "control", "received"),
fmc_a = ifelse(fmc_a == "在我们国家，空气污染是一个重要的问题。", 1, 0),
fmc_b = ifelse(fmc_b == "政府就像是家长，应该告诉人民应该做什么。", 1, 0),
fmc_e = ifelse(fmc_e == "政府为所有人提供优质的公共服务。", 1, 0),
c_direct_dk = ifelse(c_direct == "不想回答", 1, 0), #for priming checks
d_direct_dk = ifelse(d_direct == "不想回答", 1, 0), #and filter drop DK
e_direct_dk = ifelse(e_direct == "不想回答", 1, 0), #in main analysis
c_direct = ifelse(c_direct == "同意", 1, 0),
d_direct = ifelse(d_direct == "同意", 1, 0),
e_direct = ifelse(e_direct == "同意", 1, 0),
placebo_direct = ifelse(placebo_1_direct == "同意" | placebo_2_direct == "同意", 1, 0),
time_spent = time_length(interval(as_datetime(StartDate), as_datetime(EndDate))) #in seconds!
)  %>%
select(-c(IMC_1_1:IMC_1_6, info, imc_2_3:imc_2_7, placebo_1_direct:placebo_2_direct,
StartDate, EndDate))
#lets remove"项" from the treatment, control and placebo groups
keep_digit <- function(x) gsub("[^0-9]", "", x)
vars <- c("a_control", "a_treatment", "b_control", "b_placebo", "b_treatment",
"c_control", "c_treatment", "d_control","d_treatment",
"e_control", "e_placebo", "e_treatment")
df <-  df %>% mutate_at(vars, keep_digit) %>%
mutate_at(vars, as.numeric)
write_csv(df, "data/survey-data.csv")
# lets get the survey questions
questions <- survey_questions(surveys$id[7])
questions
# need to clean away html-junk...
#lets write a cleaner function
clean_html <- function(x) {
return(gsub("<.*?>", "", x))
}
#seem to work
questions <- questions %>%
mutate(Wording = clean_html(question),
Tag = clean_html(qname)) %>%
select(Tag, Wording) %>%
distinct(Tag, .keep_all = TRUE)
# save as csv to be called from pap2.Rmd
write_csv(questions, "data/question_wording.csv")
